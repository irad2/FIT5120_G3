{"version":3,"sources":["assets/character/outside.svg","assets/character/sunburnt.svg","assets/character/inside.svg","components/Copyright.js","assets/character/sunscreen.svg","components/Character.js","components/LinearProgressWithLabel.js","containers/App.js","assets/character/welcomeKid.svg","containers/Welcome.js","reportWebVitals.js","index.js","utils/helpers.js"],"names":["Copyright","useStyles","makeStyles","theme","image","width","height","img","margin","display","maxWidth","maxHeight","Character","props","classes","useState","outsideKid","src","setSrc","useEffect","sunburnKid","indoorsKid","forEach","Image","sunburn","outdoors","sunscreen","sunscreenKid","Zoom","in","style","transitionDelay","className","alt","name","LinearProgressWithLabel","Box","alignItems","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","createMuiTheme","palette","primary","main","secondary","font","family","root","flexGrow","justifyContent","flexDirection","backgroundColor","minHeight","paper","padding","spacing","borderRadius","boxShadow","avatarLarge","buttonWrapper","position","button","overflow","circularProgress","top","left","transform","uvProgress","marginLeft","uvProgressLabel","buttonGroup","marginTop","fontWeight","marginRight","marginBottom","stayInRange","stat","backgroundImage","welcomePet","backgroundRepeat","backgroundSize","backgroundPosition","avatar","form","submit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","exact","path","component","history","useHistory","nameValue","setNameValue","dayDurationValue","ThemeProvider","Grid","container","CssBaseline","item","xs","sm","md","Paper","elevation","square","onSubmit","event","preventDefault","push","encodeURIComponent","method","TextField","fullWidth","required","id","label","autoComplete","autoFocus","onChange","target","Button","type","mt","setName","dayDuration","setDayDuration","age","setAge","setSunburn","boredom","setBoredom","outdoor","setOutdoor","setSunscreen","money","setMoney","uv","setUv","sunscreenDuration","setSunscreenDuration","gameEnd","setGameEnd","dialogOpen","setDialogOpen","timeoutRef","useRef","eventTimeoutRef","useParams","petName","dayDurationInSeconds","outdoorRef","sunscreenRef","uvRef","uvChangeProgress","setUvChangeProgress","beginLife","timeOutInfo","fn","time","nextAt","timeout","wrapper","Date","getTime","setTimeout","cancel","clearTimeout","timeoutID","accurateInterval","petDay","current","prevAge","newAge","daysUntilUvChange","floor","random","prevDuration","prevSunburn","prevBoredom","resetGame","handleDialogClose","cleanup","useCallback","text","eventTypeGraphic","StaticBanner","show","icon","iconProps","open","undefined","decodeURIComponent","Number","isNaN","parseInt","inputedDuration","uvChangeInterval","setInterval","clearInterval","Fragment","gutterBottom","uvIndex","uvValue","CircularProgress","size","bottom","right","statLabel","ButtonGroup","disabled","onClick","Tooltip","title","arrow","placement","leaveDelay","fontSize","prevMoney","characterContainer","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.20369af6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/outside.812874c4.svg\";","export default __webpack_public_path__ + \"static/media/sunburnt.e11e5e3a.svg\";","export default __webpack_public_path__ + \"static/media/inside.8f647e22.svg\";","import Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default function Copyright() {\n  return (\n    null\n  );\n}","export default __webpack_public_path__ + \"static/media/sunscreen.da882404.svg\";","import React, {useState, useEffect} from 'react';\nimport sunscreenKid from '../assets/character/sunscreen.svg';\nimport outsideKid from '../assets/character/outside.svg';\nimport sunburnKid from '../assets/character/sunburnt.svg';\nimport indoorsKid from '../assets/character/inside.svg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    width: 130,\n    height: 130,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nexport default function Character(props) {\n  const classes = useStyles();\n  const [src, setSrc] = useState(outsideKid);\n\n  useEffect(() => {\n    //Preloading character assets\n    const imageList = [outsideKid, sunburnKid, indoorsKid]\n    imageList.forEach((image) => {\n        new Image().src = image\n    });\n  }, []);\n    useEffect(() => {\n      if (props.sunburn > 50) {\n        setSrc(sunburnKid)\n      } else if (props.outdoors == false) {\n        setSrc(indoorsKid)\n      } else if (props.sunscreen == true) {\n        setSrc(sunscreenKid)\n      } else {\n        setSrc(outsideKid)\n      }\n      })\n    \n  // useEffect(() => {\n  //   if (props.age === 0) {\n  //     setSrc(bornPet);\n  //   } else if (props.health === 0) {\n  //     setSrc(deadPet);\n  //   } else if (props.image) {\n  //     setSrc(props.image);\n  //   } else if (props.age > 3) {\n  //     if (props.happiness >= 70 && props.happiness <= 90) {   \n  //       setSrc(happyPet);\n  //     } else if (props.happiness <= 30 && props.happiness > 0){\n  //       setSrc(sadPet);\n  //     } else if (props.happiness > 90){\n  //       setSrc(lovePet);\n  //     } else if (props.happiness === 0) {\n  //       setSrc(cryingPet);\n  //     } else {\n  //       setSrc(welcomePet);\n  //     }\n  //   }\n  // }, [props.age, props.happiness, props.health, props.image]);\n\n  return (\n    <Zoom in={true} style={{ transitionDelay: '500ms' }}>\n      <div>\n        <img className={classes.img} alt={props.name} src={src} />\n      </div>\n    </Zoom>\n  );\n}","import Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nexport default function LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}","import React, {useState, useEffect, useRef, useCallback} from 'react';\nimport outsideKid from '../assets/character/outside.svg';\nimport sunburnKid from '../assets/character/sunburnt.svg';\nimport indoorsKid from '../assets/character/inside.svg';\nimport {useParams} from 'react-router-dom';\nimport {accurateInterval} from '../utils/helpers.js';\nimport Copyright from '../components/Copyright';\nimport Character from '../components/Character';\nimport LinearProgressWithLabel from '../components/LinearProgressWithLabel';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { StaticBanner } from 'material-ui-banner';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FF9800', // Orange\n    },\n    secondary: {\n      main: '#009688', // Teal\n    },\n  },\n  font: {\n\tfamily: ''\n  }\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: '#ff9800',\n    minHeight: '100vh',\n  },\n  paper: {\n    padding: theme.spacing(3),\n    margin: '2rem auto',\n    maxWidth: '800px',\n    width: '90%',\n    backgroundColor: '#f2f4f5', // Updated this line\n    borderRadius: '12px',\n    boxShadow: '0 3px 10px rgba(0,0,0,0.1)',\n  },\n  avatarLarge: {\n  \twidth: 72,\n    height: 72,\n  },\n  buttonWrapper: {\n    position: 'relative',\n    // display: 'inline-flex',\n    // alignItems: 'center',\n  },\n  button: {\n    position: 'relative',\n    overflow: 'hidden', // Ensure child elements don't overflow\n  },\n  circularProgress: {\n    position: 'absolute',\n    top: '30%',\n    left: '45%',\n    transform: 'translate(-50%, -50%)',\n    // color: 'yell', // Optional: Change color if needed\n  },\n  uvProgress: {\n    position: 'relative',\n    display: 'inline-flex',\n    marginLeft: theme.spacing(1),\n  },\n  uvProgressLabel: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  buttonGroup: {\n    marginTop: theme.spacing(2),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  characterContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n  },\n  statLabel: {\n    fontWeight: 'bold',\n    marginRight: theme.spacing(1),\n  },\n  uvIndex: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(1),\n  },\n  uvValue: {\n    fontWeight: 'bold',\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n//Helper functions\n \n function status(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return Promise.resolve(response)\n  } else if (response.status === 429){\n    return Promise.resolve(response)\n  }else {\n    return Promise.reject(new Error(response.statusText))\n  }\n }\n\n function json(response) {\n  return response.json()\n }\n\n const stayInRange = (stat) => {\n  \tif (stat >= 0 && stat <= 100)\n\t    return stat;\n\t else if (stat > 100)\n\t    return 100;\n\telse\n\t    return 0;\n  }\n\n\n\n\nexport default function App() {\n\nconst [name, setName] = useState('Pippin');\nconst [dayDuration, setDayDuration] = useState(1000); //in miliseconds\nconst [age, setAge] = useState(0);\n\n\n\n// const [health, setHealth] = useState(100);\n// const [hunger, setHunger] = useState(0);\n// const [happiness, setHappiness] = useState(100);\n\nconst [sunburn, setSunburn] = useState(0);\nconst [boredom, setBoredom] = useState(0);\nconst [outdoor, setOutdoor] = useState(true);\nconst [sunscreen, setSunscreen] = useState(false);\nconst [money, setMoney] = useState(0);\nconst [hat, setHat] = useState(false);\nconst [uv, setUv] = useState(5);\nconst [sunscreenDuration, setSunscreenDuration] = useState(0);\n\nconst [gameEnd, setGameEnd] = useState(false);\nconst [dialogOpen, setDialogOpen] = useState(false);\nconst timeoutRef = useRef();\nconst eventTimeoutRef = useRef();\nconst classes = useStyles();\nconst {petName, dayDurationInSeconds} = useParams();\n\nconst outdoorRef = useRef(outdoor);\nconst sunscreenRef = useRef(sunscreen);\nconst uvRef = useRef(uv);\nconst [uvChangeProgress, setUvChangeProgress] = useState(0);\n\n\n\n\n const beginLife = () => {\n    let timeOutInfo = accurateInterval(() => {\n          petDay();\n        }, dayDuration) \n    timeoutRef.current = timeOutInfo;\n    //console.log(timeoutRef.current)\n }\n\n//   const handleNextEvent = (nextEvent) => {\n//   \t/*timeoutRef.current is null when starting a new game. \n//   \tThis condition also keeps the app from fetching when the game has ended\n//   \t*/\n//   \tif (timeoutRef.current !== null) {\n// \t  \tlet nextEventInfo = accurateInterval(() => {\n// \t          getNextEvent();\n// \t        }, nextEvent)\n// \t    eventTimeoutRef.current = nextEventInfo;\n//     \t//console.log(eventTimeoutRef.current);\n//     }\n//   }\n\n//   const getNextEvent = () => {\n  \t\n// \t\tfetch('https://www.virtual-pet.uk/v1/event')\n// \t\t\t.then(status)\n// \t\t\t.then(json)\n// \t\t\t.then(function(data) {\n// \t\t\t    if(data.type === 'Error'){\n// \t\t\t    \t console.log('Request failed', data);\n// \t\t\t    \t if (eventTimeoutRef.current) {\n// \t\t\t\t\t\t    eventTimeoutRef.current.cancel();\n// \t\t\t\t\t\t    eventTimeoutRef.current = null;\n// \t\t\t\t\t\t }\n// \t\t\t    \t handleNextEvent(data.nextEvent * dayDuration);\n// \t\t\t    } else {\n// \t\t\t    \tconsole.log('Request succeeded with JSON response', data);\n// \t\t\t\t    setHealth((prev) => stayInRange(prev + data.impact.health));\n// \t\t\t\t\tsetHunger((prev) => stayInRange(prev + data.impact.hunger));\n// \t\t\t\t\tsetHappiness((prev) => stayInRange(prev + data.impact.happiness));\n// \t\t\t\t\thandleOpenBanner(data.type.toUpperCase() + \"! \" + data.title + \": \" + data.description + \" Impact, health: \" + data.impact.health + \" hunger: \" + data.impact.hunger + \" happiness: \" + data.impact.happiness, getCharacter(data.type));\n// \t\t\t\t\tif (eventTimeoutRef.current) {\n// \t\t\t\t\t\t    eventTimeoutRef.current.cancel();\n// \t\t\t\t\t\t    eventTimeoutRef.current = null;\n// \t\t\t\t\t\t }\n// \t\t\t\t\thandleNextEvent(data.nextEvent * dayDuration); \n// \t\t\t\t}\t\t\t    \t\n\n// \t\t\t }).catch(function(error) {\n// \t\t\t    console.log('Request failed', error);\n// \t\t\t });\n\t\t  \t\n//   }\n\n const petDay = () => {\n\tsetAge((prevAge) => {\n\t  const newAge = prevAge + 1;\n\t  const daysUntilUvChange = (5 - (newAge % 5)) % 5;\n\t  if (daysUntilUvChange === 0) {\n\t\tsetUv(Math.floor(Math.random() * 14) + 1);\n\t  }\n\t  setUvChangeProgress(((5 - daysUntilUvChange) / 5) * 100);\n\t  return newAge;\n\t});\n  \n\tif (outdoorRef.current) {\n\t  if (sunscreenRef.current) {\n\t\tsetSunscreenDuration((prevDuration) => {\n\t\t  if (prevDuration > 0) {\n\t\t\treturn prevDuration - 1;\n\t\t  } else {\n\t\t\tsetSunscreen(false);\n\t\t\treturn 0;\n\t\t  }\n\t\t});\n\t\tsetSunburn((prevSunburn) => stayInRange(prevSunburn + (uvRef.current / 2)));\n\t  } else {\n\t\tsetSunburn((prevSunburn) => stayInRange(prevSunburn + uvRef.current));\n\t  }\n\t  setBoredom((prevBoredom) => stayInRange(prevBoredom - 5));\n\t} else {\n\t  setSunburn((prevSunburn) => stayInRange(prevSunburn - 10));\n\t  setBoredom((prevBoredom) => stayInRange(prevBoredom + 5));\n\t}\n  };\n\n//   const cleanPet = () => {\n// \tif (!gameEnd) {\n// \t\tsetHealth((prev) => stayInRange(prev + 1));\n// \t}\n// }\n\n// const feedPet = () => {\n// \tif (!gameEnd) {\n// \t\tsetHunger((prev) => stayInRange(prev - 1));\n// \t}\n// }\n\n// const playPet = () => {\n// \tif (!gameEnd) {\n// \t\tsetHappiness((prev) => stayInRange(prev + (Math.floor(Math.random() * 5) + 1))); // random reduction between 1 -> 5)\n// \t}\n// }\n\n  const goInside = () => {\n\tif (!gameEnd) {\n\t\tsetOutdoor(false);\n\t\tsetSunscreen(false);\n\t\tsetSunscreenDuration(0);\n\t}\n  }\n\n  const goOutside = () => {\n\tif (!gameEnd) {\n\t\tsetOutdoor(true);\n\t}\n  }\n\n  const applySunscreen = () => {\n\tif (!gameEnd) {\n\t\tif (money >= 5) {\n\t\t\tsetMoney((prevMoney) => prevMoney - 5);\n\t\t\tsetSunscreen(true);\n\t\t\tsetSunscreenDuration(5);\n\n\t}\n  }}\n\n  const doChores = () => {\n\tif (!gameEnd) {\n\t  setMoney((prevMoney) => prevMoney + 1);\n\t  setBoredom((prevBoredom) => stayInRange(prevBoredom + 10));\n\t}\n  };\n\n\n  const resetGame = () => {  \t  \t\n  \tsetAge(0);\n\tsetSunburn(0);\n\tsetBoredom(0);\n\tsetSunscreen(false);\n\tsetGameEnd(false);\n\tsetMoney(0);\n  }\n\n  //helper functions\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const handleOpenBanner = useCallback((text, eventTypeGraphic) => StaticBanner.show({\n  \t\ticon: <div />,\n  \t\ticonProps : {\n  \t\t\tsrc: eventTypeGraphic,\n  \t\t\tclassName:  classes.avatarLarge\n  \t\t},\n\t    open:  true,\n\t    label: text,\n   }), [classes.avatarLarge]);\n\n  const cleanup = () => {\n     //Cancel timers\n\t\tif (timeoutRef.current) {\n\t      timeoutRef.current.cancel();\n\t      \n\t    }\n\t    if (eventTimeoutRef.current) {\n\t\t  eventTimeoutRef.current.cancel();\n\t\t}\n\n\t\ttimeoutRef.current = null;\n\t\teventTimeoutRef.current = null;\n   }\n  \n  //Effects\n\n\n  useEffect(() => {\n\toutdoorRef.current = outdoor;\n  }, [outdoor]);\n  \n  useEffect(() => {\n\tsunscreenRef.current = sunscreen;\n  }, [sunscreen]);\n  \n  useEffect(() => {\n\tuvRef.current = uv;\n  }, [uv]);\n\n  useEffect(() => {\n   if (sunburn == 100 || boredom == 100) {   \t \n   \t setDialogOpen(true);\n\t setGameEnd(true);\n   }\n  }, [sunburn, boredom]);\n\n  useEffect(() => {\n    if (!gameEnd) {\n      // Set pet name if provided\n      if (petName !== undefined) {\n        setName(decodeURIComponent(petName));\n      }\n\n      // Set day duration\n      if (dayDurationInSeconds !== undefined && !Number.isNaN(parseInt(dayDurationInSeconds))) {\n        let inputedDuration = parseInt(dayDurationInSeconds);\n        if (inputedDuration <= 0) {\n          setDayDuration(1000);\n        } else if (inputedDuration > 60) {\n          setDayDuration(60 * 1000);\n        } else {\n          setDayDuration(inputedDuration * 1000);\n        }\n      } else {\n        setDayDuration(1000);\n      }\n\n      // Initialize game state\n      setSunburn(0);\n      setBoredom(0);\n      setOutdoor(true);\n      setSunscreen(false);\n      setSunscreenDuration(0);\n      setUv(5); // Starting UV index\n\n      // Start the game loop\n      beginLife();\n\n      // Schedule the first UV change\n      const uvChangeInterval = setInterval(() => {\n        setUv(Math.floor(Math.random() * 14) + 1);\n      }, 5 * dayDuration);\n\n      // Cleanup function\n      return () => {\n        cleanup();\n        clearInterval(uvChangeInterval);\n      };\n    } else {\n      cleanup();\n    }\n  }, [gameEnd, petName, dayDurationInSeconds, dayDuration]);\n\n  const daysUntilUvChange = (5 - (age % 5)) % 5;\n\n  const getCharacterImage = () => {\n    if (outdoor) {\n      if (sunburn > 50) {\n        return sunburnKid;\n      }\n      return outsideKid;\n    }\n    return indoorsKid;\n  };\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <React.Fragment>\n        <CssBaseline />\n        <StaticBanner />\n        <Grid container component=\"main\" className={classes.root}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"h3\" gutterBottom>\n                  {name}\n                </Typography>\n                <Typography variant=\"h6\" gutterBottom>\n                  Age: {age}\n                </Typography>\n                <div className={classes.uvIndex}>\n                  <Typography variant=\"body1\">Today's UV Index:</Typography>\n                  <Typography\n                    variant=\"body1\"\n                    className={classes.uvValue}\n                    style={{ color: uv > 10 ? 'red' : uv > 5 ? 'orange' : 'green' }}\n                  >\n                    {uv}\n                  </Typography>\n                  <Box position=\"relative\" display=\"inline-flex\" marginLeft={1}>\n                    <CircularProgress variant=\"determinate\" value={uvChangeProgress} size={24} />\n                    <Box\n                      top={0}\n                      left={0}\n                      bottom={0}\n                      right={0}\n                      position=\"absolute\"\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                    >\n                      <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">\n                        {daysUntilUvChange}\n                      </Typography>\n                    </Box>\n                  </Box>\n                </div>\n                <Typography variant=\"body1\" gutterBottom>\n                  Coins: {money}\n                </Typography>\n                <Typography variant=\"body1\" gutterBottom>\n                  You are currently {outdoor ? \"outdoors\" : \"indoors\"}\n                </Typography>\n                <Typography variant=\"body1\" className={classes.statLabel}>\n                  Sunburn:\n                </Typography>\n                <LinearProgressWithLabel value={sunburn} />\n                <Typography variant=\"body1\" className={classes.statLabel}>\n                  Boredom:\n                </Typography>\n                <LinearProgressWithLabel value={boredom} />\n                \n                <ButtonGroup color=\"primary\" variant=\"contained\" className={classes.buttonGroup}>\n                  <Button\n                    disabled={gameEnd}\n                    onClick={outdoor ? goInside : goOutside}\n                    className={classes.button}\n                  >\n                    {outdoor ? 'Go Inside' : 'Play Outside'}\n                  </Button>\n                  {outdoor && (\n                    <Tooltip title={`Spend 5 coins to reduce sunburn for 5 days`} arrow placement=\"top\"  leaveDelay={200} style={{ fontSize: '1.2em' }}>\n                      <span>\n                        <Button\n                          disabled={gameEnd || sunscreenDuration > 0 || money < 5}\n                          onClick={applySunscreen}\n                          className={classes.button}\n                        >\n                          Apply Sunscreen\n                          {sunscreenDuration > 0 && (\n                            <CircularProgress\n                              variant=\"static\"\n                              value={(sunscreenDuration / 5) * 100}\n                              size={24}\n                              className={classes.circularProgress}\n                            />\n                          )}\n                        </Button>\n                      </span>\n                    </Tooltip>\n                  )}\n                  {!outdoor && (\n                    <Button\n                      disabled={gameEnd}\n                      onClick={doChores}\n                      className={classes.button}\n                    >\n                      Do Chores\n                    </Button>\n                  )}\n                </ButtonGroup>\n                <Button\n                  onClick={resetGame}\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  className={classes.button}\n                >\n                  {gameEnd ? \"Play again!\" : \"Reset Game\"}\n                </Button>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <div className={classes.characterContainer}>\n                  <Character\n                    name={name}\n                    age={age}\n                    image={getCharacterImage()}\n                    sunburn={sunburn}\n                    boredom={boredom}\n                    outdoors={outdoor}\n\t\t\t\t\tsunscreen={sunscreen}\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </Paper>\n          <Copyright />\n        </Grid>\n        {gameEnd && \n          <Dialog\n            open={dialogOpen}\n            onClose={handleDialogClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">Game Over.</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                Let's play again!\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleDialogClose} color=\"primary\">\n                Close\n              </Button>\n              <Button onClick={resetGame} color=\"primary\" autoFocus>\n                Start Over!\n              </Button>\n            </DialogActions>\n          </Dialog>\n        }\n      </React.Fragment>\n    </ThemeProvider>\n  )\n}","export default __webpack_public_path__ + \"static/media/welcomeKid.126d9273.svg\";","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Copyright from '../components/Copyright';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport welcomePet from '../assets/character/welcomeKid.svg';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FF9800', // Orange\n    },\n    secondary: {\n      main: '#009688', // Teal\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n    backgroundColor: '#ff9800',\n  },\n  image: {\n    backgroundImage: `url(${welcomePet})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: '#f2f4f5',\n    backgroundSize: 'contain',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#ffffff',\n    padding: theme.spacing(3),\n    borderRadius: '12px',\n    boxShadow: '0 3px 10px rgba(0,0,0,0.1)',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst dayDurationInputProps = {\n  step: 1,\n  min: 1,\n  max: 60,\n};\n\nexport default function Welcome() {\n  const history = useHistory();\n  const classes = useStyles();\n  const [nameValue, setNameValue] = useState('Sunny');\n  const [dayDurationValue, setDayDurationValue] = useState(5);\n\n  const handleNameChange = (event) => {\n    setNameValue(event.target.value);\n  }\n\n  const handleDayDurationChange = (event) => {\n    setDayDurationValue(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    if (nameValue !== '' && dayDurationValue !== '') {\n      history.push('/play/' + encodeURIComponent(nameValue) + \"/\" + dayDurationValue);\n    }\n\n  }  \n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n              Start by setting the name!\n            </Typography>\n            <form className={classes.form} onSubmit={handleSubmit} method=\"post\">\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                required\n                id=\"pet-name\"\n                label=\"Your Name\"\n                name=\"name\"\n                autoComplete=\"name\"\n                autoFocus\n                value={nameValue} \n                onChange={handleNameChange}\n              />\n              <Typography component='p' variant='body1'>\n                Try to keep the kid safe from the sun!\n                <br />\n                <br />\n                The UV will <b>change every 5 days</b>\n                <br />\n                The <b>higher</b> the UV index, the more <b>dangerous</b> the sun is.\n                <br />\n                You can escape the sun by going inside, but be careful! <b>Being inside makes the kid bored!</b>\n                <br />\n                You can do <b>chores while inside</b> to earn <b>coins</b> but your boredom will go up even more!\n                <br />\n                You can spend <b>5 coins to buy sunscreen</b> to reduce your sunburn but the <b>sunscreen wears off after 5 days.</b>\n\n              </Typography>\n              {/* <TextField\n                id=\"day-duration\"\n                label=\"Day Duration (in seconds)\"\n                variant=\"outlined\"\n                type=\"number\"\n                defaultValue={dayDurationValue}\n                inputProps={dayDurationInputProps}\n                fullWidth\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={handleDayDurationChange}\n              /> */}\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Start Game!\n              </Button>\n              <Box mt={5}>\n                <Copyright />\n              </Box>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport App from './containers/App';\nimport Welcome from './containers/Welcome';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n   <HashRouter>\n\t\t<Switch>\n           <Route exact path=\"/\" component={Welcome} />\n           <Route path=\"/play/:petName?/:dayDurationInSeconds?\" component={App} />\n        </Switch>\n\t</HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);","export const accurateInterval = function (fn, time) {\n  let cancel, nextAt, timeout, wrapper, timeoutID;\n  nextAt = new Date().getTime() + time;\n  timeout = null;\n  wrapper = function () {\n    nextAt += time;\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n    return fn();\n  };\n  cancel = function () {\n    return clearTimeout(timeout);\n  };\n  // eslint-disable-next-line\n  timeoutID = function () {\n    return timeout;\n  };\n  timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n  return {\n    cancel: cancel,\n    timeoutID : timeout\n  };\n};"],"sourceRoot":""}